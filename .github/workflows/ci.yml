name: ci
on:
  push:
    # branches: [ master ] # Uncomment if you want to only run the workflow when pushing on to the master branch
  pull_request:
  workflow_dispatch:

jobs:
  windows_x86_64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-glfw mingw-w64-x86_64-libtre-git mingw-w64-x86_64-libpng scons make git

      - name: Build Goxel
        run: |
          make release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: win_x86_64_binary
          path: Goxel++.exe
          if-no-files-found: error

  linux_x86_64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install GLFW3, PKG Config, Git, Gtk3, LibPNG & SCONS
      run: |
        sudo apt-get install libglfw3-dev pkg-config git libgtk-3-dev \
        libpng-dev libpng16-16 scons libfuse2

    - name: Build Goxel
      run: |
        make release

    - name: Install
      run: |
        sudo make install

    - name: Build AppImage
      run: |
        make appimage

    - name: Upload Binary
      uses: actions/upload-artifact@v4
      with:
        name: linux_x86_64_binary
        path: Goxel++
        if-no-files-found: error

    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: appimage
        path: Goxel*.AppImage
        if-no-files-found: error

  macOS_arm64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Verify Apple Silicon
      run: |
        if [[ $(uname -m) != "arm64" ]]; then
          echo "Error: This job is configured to run only on Apple Silicon (arm64) architecture"
          echo "Current architecture: $(uname -m)"
          exit 1
        fi
        echo "Running on Apple Silicon: $(uname -m)"

    - name: Install dependencies
      run: |
        # Update Homebrew to ensure we get the latest packages
        brew update
        # Install required dependencies
        brew install scons glfw tre pkg-config

    - name: Set up build environment
      run: |
        # Add Homebrew paths to environment for reliable linking
        echo "PKG_CONFIG_PATH=$(brew --prefix)/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "LDFLAGS=-L$(brew --prefix)/lib $LDFLAGS" >> $GITHUB_ENV
        echo "CPPFLAGS=-I$(brew --prefix)/include $CPPFLAGS" >> $GITHUB_ENV
        # For Apple Silicon Macs, ensure we can find libraries
        echo "LIBRARY_PATH=$(brew --prefix)/lib:$LIBRARY_PATH" >> $GITHUB_ENV

    - name: Build
      run: |
        make release

    - name: Compress artifact
      run: |
        zip Goxel++.zip Goxel++

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macOS_arm64_binary
        path: ./Goxel++.zip
        if-no-files-found: error

    - name: Build with xcode
      run: |
        cd osx/goxel
        # Ad-hoc signing - no personal info needed
        xcodebuild build \
        CODE_SIGN_IDENTITY="-" \
        CODE_SIGNING_REQUIRED=YES \
        ARCHS=arm64 \
        ONLY_ACTIVE_ARCH=NO
        
        cd build/Release
        
        # Verify it worked
        codesign --verify --deep --strict --verbose=2 Goxel++.app
        
        # Archive
        tar -cvf Goxel++.app.tar Goxel++.app

    - name: Upload app Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: goxelplusplus-macOS-arm64.app
        path: ./osx/goxel/build/Release/Goxel++.app.tar
        if-no-files-found: error

  Success: # Not Necessary
    needs: [linux_x86_64, macOS_arm64, windows_x86_64]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive